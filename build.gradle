plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/slotcars.accesswidener")
}


repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "mod_version", project.mod_version
    inputs.property "mod_name", project.mod_name
    inputs.property "mod_id", project.mod_id
    inputs.property "mod_description", project.mod_description
    inputs.property "mod_authors", project.mod_authors
    inputs.property "mod_homepage", project.mod_homepage
    inputs.property "mod_sources", project.mod_sources
    inputs.property "mod_issues", project.mod_issues
    inputs.property "mod_license", project.mod_license
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "min_loader_version", project.min_loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "mod_version": project.mod_version,
                "mod_name": project.mod_name,
                "mod_id": project.mod_id,
                "mod_description": project.mod_description,
                "mod_authors": project.mod_authors,
                "mod_homepage": project.mod_homepage,
                "mod_sources": project.mod_sources,
                "mod_issues": project.mod_issues,
                "mod_license": project.mod_license,
                "minecraft_version": project.minecraft_version,
                "min_loader_version": project.min_loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
